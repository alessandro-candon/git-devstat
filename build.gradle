plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.graalvm.buildtools.native' version '0.9.26'

	id 'jacoco'
	id "org.sonarqube" version "4.2.1.3168"

	id 'com.diffplug.spotless' version '6.19.0'

    id 'info.solidsoft.pitest' version '1.9.11'
}

group = 'org.devstat'
version = '0.1.0-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

ext {
	set('springShellVersion', "3.1.2")
}

dependencies {
	implementation 'org.springframework.shell:spring-shell-starter'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'com.opencsv:opencsv:5.8'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.11'
	testImplementation 'com.squareup.okhttp3:mockwebserver3-junit5:5.0.0-alpha.11'

	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

pitest {
    junit5PluginVersion = '1.1.2'
    timeoutConstInMillis = 10000
}

tasks.named('sonar').configure {
	dependsOn jacocoTestReport
}

spotless {
	java {
		target 'src/*/java/**/*.java'
		importOrder()
		removeUnusedImports()
		cleanthat()
		googleJavaFormat().aosp().reflowLongStrings()
		formatAnnotations()
		licenseHeader '/* OpenSource $YEAR */'
		toggleOffOn()
	}
}

tasks.register('updateGitHooks', Copy) {
    from './scripts/pre-commit'
    into './.git/hooks'
}
compileJava.dependsOn updateGitHooks

graalvmNative {
	metadataRepository {
		enabled = true
	}
}
